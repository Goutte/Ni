<?php

/**
 * Person
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    pennldi
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginaPerson extends BaseaPerson
{
  protected $engineSlug = null;

  public function getName()
  {
    if ($this->getMiddleName())
    {
      return $this->getFirstName() . ' ' . $this->getMiddleName() . ' ' . $this->getLastName();
    }

    return $this->getFirstName() . ' ' . $this->getLastName();
  }

  /**
   * A lot of people have middle initials which include periods.
   * We are using people's names as tags in the various blog engines around the site.
   * If a tag with a period in it is passed in a query string, it will 404.
   *
   * @return string $nameTag The persons full name without non-URL friendly characters
   */
  public function getNameTag()
  {
    return str_replace('.', '', $this->getName());
  }

  public function getNameAndSuffix()
  {
    $name = $this->getName();

    if ($this->getSuffix())
    {
      $name .= ', ' . $this->getSuffix();
    }

    return $name;
  }

  /**
   * This function attempts to find the "best" engine to route a given person to.
   * based on the categories that are used on various engine pages.
   *
   * @return aPage the best engine page
   */
  public function findBestEngine()
  {
    return Doctrine::getTable('aPage')->findOneBy('slug', $this->getEngineSlug());
  }

  public function getEngineSlug()
  {
    if (!isset($this->engineSlug))
    {
      $this->engineSlug = aEngineTools::getEngineSlug($this);
    }

    return $this->engineSlug;
  }
}
